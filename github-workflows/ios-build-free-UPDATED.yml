name: 🆓 Free iOS Build (No Apple Developer Account Required)

# ⚠️ IMPORTANT: This workflow builds iOS apps WITHOUT Apple Developer account
# ✅ Generates .ipa files for testing
# ❌ Cannot install on real iPhone (requires $99/year Apple Developer account)
# ✅ Can test in iOS Simulator
# ✅ Perfect for development and testing

on:
  push:
    branches:
      - main
      - develop
      - feature/*
  pull_request:
    branches:
      - main
  workflow_dispatch: # Permite ejecutar manualmente
    inputs:
      build_type:
        description: 'Tipo de build'
        required: true
        default: 'simulator'
        type: choice
        options:
          - simulator
          - unsigned-ipa
          - both

jobs:
  build-ios-simulator:
    name: 🎯 Build for iOS Simulator (100% FREE)
    runs-on: macos-latest
    if: github.event.inputs.build_type == 'simulator' || github.event.inputs.build_type == 'both' || github.event.inputs.build_type == '' || github.event_name == 'push' || github.event_name == 'pull_request'
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🚀 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
          cache: true
          
      - name: 📦 Get Flutter dependencies
        run: |
          flutter --version
          flutter doctor -v
          flutter pub get
        
      - name: 🔍 Verify project structure
        run: |
          echo "Checking iOS project structure..."
          ls -la ios/
          if [ -f "ios/Podfile" ]; then
            echo "✅ Podfile exists"
          else
            echo "❌ Podfile missing"
            exit 1
          fi
        
      - name: 🔍 Run Flutter analyzer
        run: flutter analyze
        continue-on-error: true
        
      - name: 🧪 Run Flutter tests
        run: flutter test
        continue-on-error: true
        
      - name: 📱 Install CocoaPods dependencies
        run: |
          cd ios
          # Update CocoaPods repo
          pod repo update
          # Install dependencies
          pod install --verbose
          # Verify pod installation
          if [ -d "Pods" ]; then
            echo "✅ CocoaPods installed successfully"
          else
            echo "❌ CocoaPods installation failed"
            exit 1
          fi
          
      - name: 🛠️ Setup Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
          
      - name: 🏗️ Build iOS App for Simulator
        run: |
          flutter build ios --simulator --debug --verbose
          
      - name: 📤 Upload Simulator Build as Artifact
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: ios-simulator-build-${{ github.run_number }}
          path: build/ios/iphonesimulator/
          retention-days: 30
          
      - name: ✅ Success Notification
        if: success()
        run: |
          echo "🎉 iOS Simulator build completed successfully!"
          echo "📱 You can test this in iOS Simulator"
          echo "💡 To test: Open Xcode → Window → Devices and Simulators → Run your app"
          echo "📦 Build artifacts uploaded"
          
      - name: ❌ Failure Notification
        if: failure()
        run: echo "❌ iOS Simulator build failed. Check the logs for details."

  build-ios-unsigned-ipa:
    name: 📦 Build Unsigned IPA (For Development)
    runs-on: macos-latest
    if: github.event.inputs.build_type == 'unsigned-ipa' || github.event.inputs.build_type == 'both'
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🚀 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
          cache: true
          
      - name: 📦 Get Flutter dependencies
        run: |
          flutter --version
          flutter doctor -v
          flutter pub get
        
      - name: 🔍 Verify project structure
        run: |
          echo "Checking iOS project structure..."
          ls -la ios/
          if [ -f "ios/Podfile" ]; then
            echo "✅ Podfile exists"
          else
            echo "❌ Podfile missing"
            exit 1
          fi
        
      - name: 🔍 Run Flutter analyzer
        run: flutter analyze
        continue-on-error: true
        
      - name: 🧪 Run Flutter tests
        run: flutter test
        continue-on-error: true
        
      - name: 📱 Install CocoaPods dependencies
        run: |
          cd ios
          # Update CocoaPods repo
          pod repo update
          # Install dependencies
          pod install --verbose
          # Verify pod installation
          if [ -d "Pods" ]; then
            echo "✅ CocoaPods installed successfully"
          else
            echo "❌ CocoaPods installation failed"
            exit 1
          fi
          
      - name: 🛠️ Setup Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
          
      - name: 🏗️ Build iOS App (Debug, No Code Sign)
        run: |
          flutter build ios --debug --no-codesign --verbose
          
      - name: 📦 Create IPA file
        run: |
          echo "Creating IPA from build..."
          cd build/ios/iphoneos
          
          # Create Payload directory
          mkdir -p Payload
          
          # Copy app to Payload
          cp -r Runner.app Payload/
          
          # Create IPA (which is just a zip file)
          zip -r ForeverUsInLove-unsigned.ipa Payload/
          
          # Move IPA to root
          mv ForeverUsInLove-unsigned.ipa ../../../
          
          cd ../../../
          
          # Verify IPA was created
          if [ -f "ForeverUsInLove-unsigned.ipa" ]; then
            echo "✅ IPA created successfully"
            ls -lh ForeverUsInLove-unsigned.ipa
          else
            echo "❌ IPA creation failed"
            exit 1
          fi
          
      - name: 📤 Upload IPA as Artifact
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: ios-unsigned-ipa-${{ github.run_number }}
          path: ForeverUsInLove-unsigned.ipa
          retention-days: 30
          
      - name: 📤 Upload Runner.app as Artifact
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: ios-runner-app-${{ github.run_number }}
          path: build/ios/iphoneos/Runner.app
          retention-days: 30
          
      - name: ✅ Success Notification
        if: success()
        run: |
          echo "🎉 Unsigned iOS build completed successfully!"
          echo "📦 IPA file: ForeverUsInLove-unsigned.ipa"
          echo "⚠️  This build CANNOT be installed on real iPhone"
          echo "💡 This is for development and testing purposes only"
          echo "🔐 To install on real iPhone, you need:"
          echo "    1. Apple Developer account (\$99/year)"
          echo "    2. Code signing certificates"
          echo "    3. Provisioning profiles"
          echo ""
          echo "📥 Download artifacts from the Actions tab"
          
      - name: ❌ Failure Notification
        if: failure()
        run: echo "❌ Unsigned iOS build failed. Check the logs for details."
